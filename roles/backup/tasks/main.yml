--- # Backup

#--------------------
# Get timestamp

- name: get current date for timestamp
  shell: date +"%Y-%m-%d-%I%M%S"
  register: current_date
  tags: backup

#-----------------
# Backup and fetch
# @TODO cleanup old backups

# Create a new database backup every time
- name: backup remote database
  shell: sudo -u postgres pg_dump {{ db }} | gzip > {{ backup_path }}/{{ current_date.stdout }}.sql.gz

- name: fetch database to local
  fetch: src={{ backup_path }}/{{ current_date.stdout }}.sql.gz dest={{ local_backup_path }} flat=yes fail_on_missing=yes

# But we don't bother making a whole new copy of all the files every time, just rsync them.
- name: sync public files to local
  synchronize: mode=pull src={{ current_path }}/public dest={{ local_rsync_path }} copy_links=yes
  tags: rsync

# @TODO just delete anything older than the newest {{ num_remote_backups }} files
#- name: Get number of backups
  #shell: ls | grep ".sql.gz" | wc -w
  #register: num_backups

#- name: Delete old backups
  #shell: rm
  #when: num_backups.stdout > {{ num_remote_backups }}
