--- # App

# Setup shared files and folders

- name: make dirs
  file: path={{ item }} state=directory owner={{ user }}
  with_items:
    - "{{ app_path }}"
    - "{{ shared_path }}"
    - "{{ backup_path }}"
    - "{{ releases_path }}"
    - "{{ assets_path }}"
    - "{{ system_path }}"
    - "{{ spree_path }}"
    - "{{ log_path }}"
    - "{{ pid_path }}"
    - "{{ sock_path }}"
    - "{{ config_path }}"
  tags: dirs

- name: template files
  template: src={{ item.src }} dest={{ item.dest }} owner={{ user }} mode=775
  with_items:
    - { src: "post-receive.j2", dest: "{{ config_path }}/post-receive" }
    - { src: "postgresql.yml.j2", dest: "{{ config_path }}/database.yml" }
    - { src: "seed.sh.j2", dest: "{{ config_path }}/seed.sh" }
    - { src: "application.yml.j2", dest: "{{ config_path }}/application.yml" }
  tags: app_templates

- name: copy the bugsnag file into the shared folder
  template: src=bugsnag.rb.j2 dest={{ config_path }}/bugnsag.rb mode=775
  when: bugsnag_key != "none"

- name: copy the newrelic file into the shared folder
  template: src=newrelic.yml.j2 dest={{ config_path }}/newrelic.yml owner={{ user }} mode=775
  when: newrelic_key != "none"

- name: copy the s3 file to the shared folder
  template: src=s3.yml dest={{ config_path }}/s3.yml owner={{ user }} mode=775
  when: s3_bucket != "none"


# This is a temporary solution to having hard coded Australian data in the repo,
# without adding a fork that does the same thing for elsewhere. So we just copy over the files,
# or not if you don't need to.

- name: get i10n repo
  git: repo={{ i10n_repo }} dest={{ shared_path }}/i10n force=yes
  tags: i10n

- shell: ls -al {{ shared_path }}
- shell: ls -al {{ shared_path }}/i10n

- name: copy optional files
  copy: src={{ item.src }} dest={{ item.dest }} owner={{ user }} mode=775 force=yes
  with_items:
    - { src: "{{ shared_path }}/i10n/suburb_seeds.rb", dest: "{{ config_path }}/suburb_seeds.rb" }
    - { src: "{{ shared_path }}/i10n/spree.rb", dest: "{{ config_path }}/spree.rb" }
    - { src: "{{ shared_path }}/i10n/states.yml", dest: "{{ config_path }}/states.yml" }
    - { src: "{{ shared_path }}/i10n/countries.yml", dest: "{{ config_path }}/countries.yml" }
  ignore_errors: yes

# Cron. TODO use ansible cron module for this.
- name: generate the crontab file for automated backups
  template: src=crontab.j2 dest={{ home_path }}/crontab

- name: setup cron for the user
  sudo: yes
  command: "crontab -u {{ user }} {{ home_path }}/crontab"
