--- # webserver

- name: copy unicorn files
  template: src={{ item.src }} dest={{ item.dest }} mode={{ item.mode }} owner={{ item.owner }} group={{ item.group }}
  sudo: yes
  with_items:
    - { src: "unicorn_init.j2", dest: "/etc/init.d/unicorn_{{ app }}", mode: "0744", owner: "{{ user }}", group: "{{ user }}" }
    - { src: "unicorn.rb.j2", dest: "{{ config_path }}/unicorn.rb", mode: "0744", owner: "{{ user }}", group: "{{ user }}" }
    - { src: "nginx_unicorn.j2", dest: "{{ nginx_path }}/sites-available/{{ app }}", mode: "0600", owner: root, group: root }
  notify:
    - restart unicorn
    - restart nginx


- command: type bundle
  register: d_type

- debug: var=d_type

- command: gem list
  register: d_gem_list

- debug: var=d_gem_list

- command: gem env
  register: d_gem_env

- debug: var=d_gem_env



- name: update unicorn
  service: name=unicorn_{{ app }} enabled=yes
  sudo: yes

- name: enable unicorn app with nginx
  file: src={{ nginx_path }}/sites-available/{{ app }} dest={{ nginx_path }}/sites-enabled/{{ app }} state=link mode=644
  sudo: yes
  tags: unicorn-nginx
  notify:
    - restart unicorn
    - restart nginx

- name: remove default nginx site
  file: dest={{ nginx_path }}/sites-enabled/default state=absent
  sudo: yes
  tags: unicorn-nginx
  notify:
    - restart unicorn
    - restart nginx

#- name: download phantomjs
  #get_url: url=https://phantomjs.googlecode.com/files/{{ phantomjs }}.tar.bz2
           #dest=/var/tmp/{{ phantomjs }}.tar.bz2
  #sudo: yes

#- name: untar phantomjs
  #shell: chdir=/var/tmp tar xjf {{ phantomjs }}.tar.bz2 creates=/var/tmp/{{ phantomjs }}
  #sudo: yes

#- name: symlink the phantomjs executable
  #file: dest=/usr/bin/phantomjs src=/var/tmp/{{ phantomjs }}/bin/phantomjs state=link
  #sudo: yes

